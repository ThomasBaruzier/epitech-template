##
## EPITECH PROJECT, 2023
## Makefile
## File description:
## Makefile
##

CC	=	gcc

CFLAGS	=	-Wall -Wextra -Werror -Ofast -march=native -flto

SRC	=	my_strcmp.c		\
		my_str_isprintable.c	\
		my_show_word_array.c	\
		my_strcpy.c		\
		my_showmem.c		\
		my_str_to_word_array.c	\
		my_compute_square_root.c\
		my_is_prime.c		\
		my_strncat.c		\
		my_str_isnum.c		\
		my_str_isupper.c	\
		my_strlowcase.c		\
		my_sort_int_array.c	\
		my_strstr.c		\
		my_strcat.c		\
		my_getnbr.c		\
		my_str_islower.c	\
		my_showstr.c		\
		my_isneg.c		\
		my_strncmp.c		\
		my_strlen.c		\
		my_putstr.c		\
		my_find_prime_sup.c	\
		my_put_nbr.c		\
		my_compute_power_rec.c	\
		my_strcapitalize.c	\
		my_strdup.c		\
		my_revstr.c		\
		my_swap.c		\
		my_strncpy.c		\
		my_str_isalpha.c	\
		my_strupcase.c		\
		my_strupcase.c	\
		my_putchar.c

OBJ	=	$(SRC:.c=.o)

NAME	=	libmy.a

HEADER	=	my.h

all:		$(NAME)

$(NAME):	$(HEADER) $(OBJ)
		$(AR) rcs $(NAME) $(OBJ)
		cp $(NAME) ..
		mkdir -p ../../include
		cp $(HEADER) ../../include

header: $(HEADER)

$(HEADER):
	@{ \
		types='int|char|float|double|void|long|short|'; \
		types+='signed|unsigned|size_t|uint|static|const'; \
		proto=$$(grep -Ph "^($$types) [^\(]+[^\)]+\)$$" my_*.c); \
		header+='/*\n** EPITECH PROJECT, 2023'; \
		header+='\n** functions.h'; \
		header+='\n** File description:'; \
		header+='\n** Header file for libmy\n** '; \
		header+='Auto-generated by Makefile\n*/'; \
		header+='\n\n#include <unistd.h>\n#include <stdlib.h>'; \
		header+='\n\n#ifndef LIBMY_H\n    #define LIBMY_H\n\n'; \
		header+=$$(grep -v static <<< $$proto | sort -u | sed 's/$$/;/g'); \
		header+='\n\n#endif'; \
		echo -e "$$header" > my.h; \
	}
	@echo -e '\n\e[0;1m==> Header file my.h automatically generated\e[0m\n'

re:	fclean all

fclean:	clean
	rm -f $(NAME)

clean:
	rm -f $(OBJ) my.h
